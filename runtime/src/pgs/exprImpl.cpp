#include "exprImpl.hpp"

namespace pgs
{
	//////////////////////////////////////////////////////////////////////////
	ExprImpl::ExprImpl(...)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op1::ExprImpl_op1(const char *name, const Expr &a, bool isPre)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op1::~ExprImpl_op1()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op2::ExprImpl_op2(const char *name, const Expr &a, const Expr &b)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op2::~ExprImpl_op2()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op3::ExprImpl_op3(const char *name1, const char *name2, const Expr &a, const Expr &b, const Expr &c)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_op3::~ExprImpl_op3()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_func::ExprImpl_func(const char *name)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_func::~ExprImpl_func()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	void ExprImpl_func::pushArg(const Expr &a)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_casec::ExprImpl_casec()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_casec::~ExprImpl_casec()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	void ExprImpl_casec::pushPair(const Expr &c, const Expr &r)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	void ExprImpl_casec::pushElse(const Expr &e)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_casee::ExprImpl_casee(const Expr &e)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	ExprImpl_casee::~ExprImpl_casee()
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	void ExprImpl_casee::pushPair(const Expr &v, const Expr &r)
	{
		assert(0);
	}

	//////////////////////////////////////////////////////////////////////////
	void ExprImpl_casee::pushElse(const Expr &e)
	{
		assert(0);
	}
}
