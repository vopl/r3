#include "pch.hpp"
#include "errorCode.hpp"

//////////////////////////////////////////////////////////////////////////
bool ErrorCode::getOk()
{
	return _ec?false:true;
}

//////////////////////////////////////////////////////////////////////////
bool ErrorCode::getFail()
{
	return _ec?true:false;
}

//////////////////////////////////////////////////////////////////////////
int ErrorCode::getValue()
{
	return _ec.value();
}

//////////////////////////////////////////////////////////////////////////
QString ErrorCode::getMessage()
{
	return QString::fromLocal8Bit(_ec.message().c_str());
}

//////////////////////////////////////////////////////////////////////////
QString ErrorCode::getCategory()
{
	return QString::fromLocal8Bit(_ec.category().name());
}

//////////////////////////////////////////////////////////////////////////
ErrorCode::ErrorCode()
	: QObject()
	, _ec()
{

}

//////////////////////////////////////////////////////////////////////////
ErrorCode::ErrorCode(const boost::system::error_code &ec)
	: QObject()
	, _ec(ec)
{

}

//////////////////////////////////////////////////////////////////////////
ErrorCode::~ErrorCode()
{

}

//////////////////////////////////////////////////////////////////////////
QString ErrorCode::toString()
{
	if(_ec)
	{
		return QString("%1 (%2, %3)").arg(getMessage()).arg(getCategory()).arg(getValue());
	}

	return "";
}

//////////////////////////////////////////////////////////////////////////
ErrorCode *ErrorCode::valueOf()
{
	return this;
}
